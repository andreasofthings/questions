# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-18 08:48
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0002_auto_20170413_0915'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('when', models.DateTimeField(auto_now=True)),
                ('importance', models.CharField(choices=[('0', 'Not very important'), ('1', 'A bit important'), ('2', 'I care'), ('3', 'Very Important'), ('4', 'Mandatory')], default='2', max_length=1)),
                ('is_public', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CatScore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='category.Category', unique=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FacebookAnswerStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fid', models.BigIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facebook_status', to='questions.Answer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PossibleAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.CharField(max_length=200)),
                ('value', models.CharField(choices=[('0', '-1.0'), ('1', '-0.5'), ('2', '0.0'), ('3', '0.5'), ('4', '1.0')], default='2', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=False)),
                ('gender', models.CharField(choices=[('u', 'undefined'), ('M', 'Male'), ('F', 'Female')], default='u', max_length=1)),
                ('lookfor', models.CharField(choices=[('a', 'any'), ('M', 'Man'), ('F', 'Female')], default='a', max_length=1)),
                ('dob', models.DateField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='match_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('is_active', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, help_text='Short descriptive unique name for use in urls.', max_length=255, null=True, unique=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.Category')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questions.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='possibleanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='possible_answer', to='questions.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='acceptable_answer',
            field=models.ManyToManyField(blank=True, related_name='acceptable_answer', to='questions.PossibleAnswer', verbose_name='answer the user would answer'),
        ),
        migrations.AddField(
            model_name='answer',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questions.Profile'),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='questions.Question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user_answer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_answer', to='questions.PossibleAnswer', verbose_name='users answer'),
        ),
        migrations.AlterUniqueTogether(
            name='catscore',
            unique_together=set([('user', 'cat')]),
        ),
        migrations.AlterUniqueTogether(
            name='answer',
            unique_together=set([('question', 'profile')]),
        ),
    ]
